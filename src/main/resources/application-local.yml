spring:
  datasource:
   druid:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password:
    url: jdbc:mysql://localhost/sell?characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
    db-type: com.alibaba.druid.pool.DruidDataSource
    filters: stat                                       #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
    max-active: 20                                      #最大连接池数量
    initial-size: 5                                     #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    max-wait: 60000                                     #获取连接时最大等待时间，单位毫秒
    min-idle: 5
    time-between-eviction-runs-millis: 60000            #1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    min-evictable-idle-time-millis: 300000
    validation-query: select 'x'                        #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
    test-while-idle: true                               #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-on-return: false                               #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    test-on-borrow: false                               #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    pool-prepared-statements: false                     #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    max-open-prepared-statements: 20                    #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    stat-view-servlet:
      enabled: true
      url-pattern: "/druid/*"
      login-username: admin
      login-password: admin
      reset-enable: false
    web-stat-filter:
      enabled: true
      url-pattern: "/*"
      exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
    filter:
      stat:
        db-type: mysql
        log-slow-sql: true
        slow-sql-millis: 2000
  jpa:
    show-sql: true
  redis:
    host: 127.0.0.1
    port: 6379
    password:
#    设置全局只要是空的字段都不返回到结果中
#  jackson:
#    default-property-inclusion: non_null
server:
  servlet:
    context-path: /sell
#logging:
#  pattern:
#    #设置日志的格式
#    console: "%d - %msg%n"
##  path: /var/log/tomcat/
##  file: /var/log/tomcat/sell.log 指定日志输出文件
##  指定类的日志级别是debug,默认是info
#  level:
#     com.imooc.LoggerTest: debug
wechat:
    mpAppId: wx3cd7106dd645dbba
    mpAppSecret: 7482cf813d523521829a2a54ec1478c0
    openAppId: oOAAb0s9tWTtnmWTPSat_2otgsQQ
    openAppSecret: abcde
    mchId: 1445123131
    mchKey: 012f1sf15swf1r2f1s12
    Keypath: F:\key
    notifyUrl: localhost:8080/sell/pay/notify
    templateId:
      orderStatus: 6Wxmcia348Vgg2xb9zVFBCipVP-02a0w06D42ZxgD6A
logging:
   level:
     com.imooc.dataobject.mapper: trace #mybatis显示出sql语句
mybatis:
  mapper-locations: classpath:mapper/*.xml #找到mybatis的xml文件